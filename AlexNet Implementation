{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EjVhAQTXyDqs","executionInfo":{"status":"ok","timestamp":1712567533744,"user_tz":-330,"elapsed":5124,"user":{"displayName":"AIML-29 Sagar Das","userId":"01630099064197628041"}},"outputId":"c50e5c70-24d5-4242-acce-535106a46ffb"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 0s 0us/step\n"]}],"source":["import tensorflow as tf\n","from tensorflow.keras import layers, models\n","from tensorflow.keras.datasets import mnist\n","from tensorflow.keras.utils import to_categorical\n","(train_images, train_labels), (test_images, test_labels) = mnist.load_data()"]},{"cell_type":"code","source":["train_images = train_images.reshape((60000, 28, 28, 1)).astype('float32') / 255\n","test_images = test_images.reshape((10000, 28, 28, 1)).astype('float32') / 255"],"metadata":{"id":"DjayUUkN6QQT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_labels = to_categorical(train_labels)\n","test_labels = to_categorical(test_labels)"],"metadata":{"id":"hZDR2yFu6VIa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Build AlexNet-like model\n","model = models.Sequential([\n","    layers.Conv2D(96, (3, 3), activation='relu', input_shape=(28, 28, 1)),\n","    layers.MaxPooling2D((2, 2)),\n","    layers.Conv2D(256, (5, 5), padding='same', activation='relu'),\n","    layers.MaxPooling2D((3, 3), strides=(2, 2)),\n","    layers.Conv2D(384, (3, 3), padding='same', activation='relu'),\n","    layers.Conv2D(384, (3, 3), padding='same', activation='relu'),\n","    layers.Conv2D(256, (3, 3), padding='same', activation='relu'),\n","    layers.MaxPooling2D((3, 3), strides=(2, 2)),\n","    layers.Flatten(),\n","    layers.Dense(4096, activation='relu'),\n","    layers.Dense(4096, activation='relu'),\n","    layers.Dense(10, activation='softmax')\n","])\n"],"metadata":{"id":"07XsMe0n6tBJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Compile the model\n","model.compile(optimizer='adam',\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])"],"metadata":{"id":"1vbik2Ut7xFC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Train the model\n","model.fit(train_images, train_labels, epochs=5, batch_size=64, validation_split=0.2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RF4qlhq4-jac","executionInfo":{"status":"ok","timestamp":1712567698034,"user_tz":-330,"elapsed":144401,"user":{"displayName":"AIML-29 Sagar Das","userId":"01630099064197628041"}},"outputId":"8eb079d3-07ad-41b2-d4a5-d70ee49dace5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","750/750 [==============================] - 27s 27ms/step - loss: 0.2599 - accuracy: 0.9131 - val_loss: 0.0563 - val_accuracy: 0.9844\n","Epoch 2/5\n","750/750 [==============================] - 19s 25ms/step - loss: 0.0618 - accuracy: 0.9833 - val_loss: 0.0562 - val_accuracy: 0.9859\n","Epoch 3/5\n","750/750 [==============================] - 19s 26ms/step - loss: 0.0522 - accuracy: 0.9866 - val_loss: 0.0609 - val_accuracy: 0.9836\n","Epoch 4/5\n","750/750 [==============================] - 19s 25ms/step - loss: 0.0396 - accuracy: 0.9898 - val_loss: 0.0577 - val_accuracy: 0.9875\n","Epoch 5/5\n","750/750 [==============================] - 19s 25ms/step - loss: 0.0322 - accuracy: 0.9910 - val_loss: 0.0407 - val_accuracy: 0.9916\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7f951a07c850>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Evaluate the model\n","test_loss, test_acc = model.evaluate(test_images, test_labels)\n","print('Test accuracy:', test_acc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Eiv3HV47_VSk","executionInfo":{"status":"ok","timestamp":1712567723679,"user_tz":-330,"elapsed":1495,"user":{"displayName":"AIML-29 Sagar Das","userId":"01630099064197628041"}},"outputId":"b62fc74e-3282-4894-81f2-71902fc229c1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 2s 6ms/step - loss: 0.0359 - accuracy: 0.9923\n","Test accuracy: 0.9922999739646912\n"]}]},{"cell_type":"code","source":["model.summary()"],"metadata":{"id":"brlIeOEF_fZQ","executionInfo":{"status":"ok","timestamp":1712567754343,"user_tz":-330,"elapsed":9,"user":{"displayName":"AIML-29 Sagar Das","userId":"01630099064197628041"}},"outputId":"39689871-74ac-4c1b-d35f-a9e4dcbb2bb7","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 26, 26, 96)        960       \n","                                                                 \n"," max_pooling2d (MaxPooling2  (None, 13, 13, 96)        0         \n"," D)                                                              \n","                                                                 \n"," conv2d_1 (Conv2D)           (None, 13, 13, 256)       614656    \n","                                                                 \n"," max_pooling2d_1 (MaxPoolin  (None, 6, 6, 256)         0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_2 (Conv2D)           (None, 6, 6, 384)         885120    \n","                                                                 \n"," conv2d_3 (Conv2D)           (None, 6, 6, 384)         1327488   \n","                                                                 \n"," conv2d_4 (Conv2D)           (None, 6, 6, 256)         884992    \n","                                                                 \n"," max_pooling2d_2 (MaxPoolin  (None, 2, 2, 256)         0         \n"," g2D)                                                            \n","                                                                 \n"," flatten (Flatten)           (None, 1024)              0         \n","                                                                 \n"," dense (Dense)               (None, 4096)              4198400   \n","                                                                 \n"," dense_1 (Dense)             (None, 4096)              16781312  \n","                                                                 \n"," dense_2 (Dense)             (None, 10)                40970     \n","                                                                 \n","=================================================================\n","Total params: 24733898 (94.35 MB)\n","Trainable params: 24733898 (94.35 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]}]}