{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Image Convolution for Edge Detection and Feature Extraction"],"metadata":{"id":"jCa9zEXCyQ-q"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VDQnEQ65uKuJ","executionInfo":{"status":"ok","timestamp":1710751732303,"user_tz":-330,"elapsed":3,"user":{"displayName":"AIML-29 Sagar Das","userId":"01630099064197628041"}},"outputId":"a74dc018-cb73-45d1-9bf2-95ea96c937a7"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.24800196 0.32916591 0.19114477 0.10819664 0.73773961 0.9807778 ]\n"," [0.27874894 0.27291661 0.50632938 0.31599686 0.51946296 0.81129248]\n"," [0.23965355 0.63855722 0.37237128 0.46837827 0.1830996  0.22796692]\n"," [0.11853977 0.74462535 0.16761756 0.4084164  0.67289401 0.25661265]\n"," [0.36751488 0.38475413 0.25562608 0.08083891 0.54422376 0.66999768]\n"," [0.47303959 0.168936   0.8768842  0.79175904 0.79140063 0.94751525]]\n","\n","[[ 1  0 -1]\n"," [ 1  0 -1]\n"," [ 1  0 -1]]\n","\n","Convolved Output:\n","[[-0.30344098  0.34806797 -0.37045675 -1.12746543]\n"," [-0.40937595  0.46330764 -0.32913836 -0.10308051]\n"," [-0.06990672  0.81030312 -0.60460245 -0.19694367]\n"," [-0.3410336   0.01730113 -0.70839055 -0.59311123]]\n"]}],"source":["import numpy as np\n","\n","# Define the 6x6 image\n","image = np.random.rand(6, 6)\n","print(image)\n","print()\n","kernel = np.array([[1, 0, -1],\n","                   [1, 0, -1],\n","                   [1, 0, -1]])\n","\n","print(kernel)\n","def convolve(image, kernel):\n","    img_height, img_width = image.shape\n","    kernel_height, kernel_width = kernel.shape\n","    output_height = img_height - kernel_height + 1\n","    output_width = img_width - kernel_width + 1\n","    output = np.zeros((output_height, output_width))\n","\n","    for i in range(output_height):\n","        for j in range(output_width):\n","            output[i, j] = np.sum(image[i:i+kernel_height, j:j+kernel_width] * kernel)\n","\n","    return output\n","\n","\n","convolved_output = convolve(image, kernel)\n","print()\n","print(\"Convolved Output:\")\n","print(convolved_output)"]},{"cell_type":"code","source":["import numpy as np\n","from scipy.signal import convolve2d\n","\n","# Define the 6x6 image\n","image = np.random.rand(6, 6)\n","print(\"Image:\")\n","print(image)\n","print()\n","\n","# Define the kernel\n","kernel = np.array([[1, 0, -1],\n","                   [1, 0, -1],\n","                   [1, 0, -1]])\n","print(\"Kernel:\")\n","print(kernel)\n","print()\n","\n","# Perform convolution\n","convolved_output = convolve2d(image, kernel, mode='valid')\n","print(\"Convolved Output:\")\n","print(convolved_output)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FgftSm2uyDPy","executionInfo":{"status":"ok","timestamp":1710752288550,"user_tz":-330,"elapsed":2447,"user":{"displayName":"AIML-29 Sagar Das","userId":"01630099064197628041"}},"outputId":"4d5df1a7-c64d-499a-8348-cb0b91ebe55e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Image:\n","[[0.39395231 0.46770006 0.28787307 0.7076293  0.20706288 0.25011616]\n"," [0.61258206 0.21019812 0.15305944 0.3094189  0.5247461  0.20610072]\n"," [0.37771678 0.23035476 0.67582335 0.9252287  0.88119022 0.94307684]\n"," [0.33073637 0.3559232  0.79769004 0.98188526 0.50412576 0.04606187]\n"," [0.29799286 0.17197961 0.66553083 0.10222833 0.46440301 0.52420725]\n"," [0.68172828 0.41442028 0.72564895 0.60684476 0.64396261 0.8462    ]]\n","\n","Kernel:\n","[[ 1  0 -1]\n"," [ 1  0 -1]\n"," [ 1  0 -1]]\n","\n","Convolved Output:\n","[[-0.2674953   1.03402397  0.49624334 -0.54298319]\n"," [ 0.30553762  1.42005679  0.28348925 -1.02129343]\n"," [ 1.13259822  1.25108472 -0.28932523 -0.49599633]\n"," [ 0.87841232  0.74863525 -0.57637845 -0.27448922]]\n"]}]},{"cell_type":"markdown","source":["With Padding and stride"],"metadata":{"id":"AnaIs4lZ4q7z"}},{"cell_type":"code","source":["import numpy as np\n","\n","# Define the 6x6 image\n","image = np.random.rand(6, 6)\n","print(\"Image:\")\n","print(image)\n","print()\n","\n","kernel = np.array([[1, 0, -1],\n","                   [1, 0, -1],\n","                   [1, 0, -1]])\n","print(\"Kernel:\")\n","print(kernel)\n","print()\n","\n","def convolve(image, kernel, padding=0, stride=1):\n","    img_height, img_width = image.shape\n","    kernel_height, kernel_width = kernel.shape\n","    output_height = ((img_height + 2 * padding - kernel_height) // stride) + 1\n","    output_width = ((img_width + 2 * padding - kernel_width) // stride) + 1\n","    output = np.zeros((output_height, output_width))\n","\n","    # Add padding to the input image\n","    padded_image = np.pad(image, ((padding, padding), (padding, padding)), mode='constant')\n","\n","    for i in range(0, img_height + 2 * padding - kernel_height + 1, stride):\n","        for j in range(0, img_width + 2 * padding - kernel_width + 1, stride):\n","            output[i // stride, j // stride] = np.sum(padded_image[i:i+kernel_height, j:j+kernel_width] * kernel)\n","\n","    return output\n","\n","# Perform convolution with padding = 1 and stride = 2\n","convolved_output = convolve(image, kernel, padding=1, stride=2)\n","print()\n","print(\"Convolved Output with Padding and Stride:\")\n","print(convolved_output)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aVTGcHYG0Al7","executionInfo":{"status":"ok","timestamp":1710754054257,"user_tz":-330,"elapsed":648,"user":{"displayName":"AIML-29 Sagar Das","userId":"01630099064197628041"}},"outputId":"8b1fe494-25ac-4a27-f139-397bf52b7f4c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Image:\n","[[0.22118757 0.69482532 0.41586241 0.4719463  0.89816807 0.16661408]\n"," [0.03907095 0.30632695 0.27963223 0.65516464 0.69848278 0.55969265]\n"," [0.74054683 0.63967503 0.26893954 0.21532855 0.45146925 0.79799051]\n"," [0.75189664 0.23258383 0.17368221 0.04733796 0.46244802 0.739078  ]\n"," [0.63611141 0.99166005 0.04951353 0.56808083 0.45292056 0.34598398]\n"," [0.87513112 0.59306055 0.48221161 0.24842099 0.70719877 0.9773091 ]]\n","\n","Kernel:\n","[[ 1  0 -1]\n"," [ 1  0 -1]\n"," [ 1  0 -1]]\n","\n","\n","Convolved Output with Padding and Stride:\n","[[-1.00115227 -0.12595867  0.40080421]\n"," [-1.1785858   0.26075465 -1.17893001]\n"," [-1.81730443  0.95346465 -1.1985313 ]]\n"]}]}]}